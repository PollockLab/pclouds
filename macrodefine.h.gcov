        -:    0:Source:macrodefine.h
        -:    0:Graph:clouds.gcno
        -:    0:Data:clouds.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#ifndef macrodefine_h__
        -:    2:#define macrodefine_h__
        -:    3:
        -:    4:/* define hash type and bit matrix type*/
        -:    5:#include <vector>
        -:    6:#include <ext/hash_map>
        -:    7:
        -:    8:#include <iostream>
        -:    9:
        -:   10:using namespace std;
        -:   11:
        -:   12:using std::vector;
        -:   13:using __gnu_cxx::hash;
        -:   14://using __gnu_cxx::hashtable;
        -:   15:using __gnu_cxx::hash_map;
        -:   16://using __gnu_cxx::hash_multimap;
        -:   17:
        -:   18:struct equalint
        -:   19:{
        -:   20:	bool operator()(unsigned long i1, unsigned long i2)
        -:   21:	{
        -:   22:		return i1 == i2;
        -:   23:	}
        -:   24:};
        -:   25:
        -:   26:typedef hash_map<unsigned long, unsigned long> patternhash_type;
        -:   27:typedef vector<int> intvector;
        -:   28:typedef vector<intvector> intmatrix;
        -:   29:typedef vector <bool> bitvector;
        -:   30:typedef vector<bitvector> bit_matrix;
        -:   31:
        -:   32:typedef struct _Pcloud
        -:   33:{
        -:   34:	unsigned long index;
        -:   35:	int number;
        -:   36:} cloud_type;
        -:   37:
        -:   38:typedef struct _Pcloud1
        -:   39:{
        -:   40:	unsigned long index;
        -:   41:	int number;
        -:   42:	int cloud;
        -:   43:} cloud_type1;
        -:   44:
        -:   45:typedef struct _Pcloud2
        -:   46:{
        -:   47:	unsigned long index;
        -:   48:	int cloud;
        -:   49:	_Pcloud2() {
        -:   50:		cloud = 0;
        -:   51:	}
        -:   52:} cloud_type2;
        -:   53:
        -:   54:typedef struct _Pcloud3
        -:   55:{
        -:   56:	unsigned long number_pattern;
        -:   57:	int number;
        -:   58:	int cloud;
        -:   59:	bool extension;
        -:   60:
     8606:   61:	_Pcloud3() {
     8606:   62:		cloud = 0;
     8606:   63:		extension = 0;
     8606:   64:	}
        -:   65:} cloud_type3;
        -:   66:
        -:   67:
        -:   68:/*definition of macros*/
        -:   69:#define MAXLINECHAR 6000		//maximum characters in each line of a file
        -:   70:#define MAXFILENAMELENGTH 5000		//maximum length of filename
        -:   71:#define BUFF_SIZE	1000000  	//size of the buffer when reading larger chromosome files
        -:   72:
        -:   73:#define DIRECTLENGTH 13     	//maximum oligo length to use direct method
        -:   74:#define OVERLAPLENGTH 17		//minimum oligo length to use overlap method
        -:   75:
        -:   76:#define HASHOLIGONUMBER 20000000	//maximum number of oligos to store with hash structure when using mixed method to calculate 16mers counts
        -:   77:#define LOWOLIGONUMBER 10000000		//maximum number of oligos to read with array structure when using overlapmethod to calcualter oligo counts
        -:   78:
        -:   79:#define MAXMAINMER 40000000		//maximum number of oligos in a cloud class
        -:   80:#define MAXACCMER 80000000		//maximum number of oligos in accessory cloud
        -:   81:#define MAXCLOUD 3000000		//maximum number of p cloud
        -:   82:
        -:   83:#define ZERO 48				//ASCII code of character '0'
        -:   84:#define NINE 57				//ASCII code of character '9'
        -:   85:
        -:   86:#endif //madrodefine_h__
